<?xml version="1.0" encoding="UTF-8"?>

<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">

	<!-- HTTP security configurations -->
    <http auto-config="true" use-expressions="true">
    	<form-login login-processing-url="/resources/j_spring_security_check" login-page="/login" authentication-failure-url="/login?login_error=t"/>
        <logout logout-url="/resources/j_spring_security_logout"/>
        
        <!-- Configure these elements to secure URIs in your application -->
        <intercept-url pattern="/ingredients/**" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/recipes/**" access="isAuthenticated()" />
        <intercept-url pattern="/resources/**" access="permitAll" />
        <intercept-url pattern="/**" access="permitAll" />
    </http>

	<authentication-manager alias="authenticationManager">
	<!-- DAO Based Security -->
	<authentication-provider>
	<jdbc-user-service data-source-ref="dataSource" users-by-username-query="SELECT L.username AS username, L.password as password, L.enabled as enabled FROM login L where L.username=?" authorities-by-username-query="SELECT L.username as username, A.authority_name as authority FROM login L left join login_user_authorities UA on L.id=UA.login left join user_authority A on UA.user_authorities = A.id WHERE L.username=?" />
	</authentication-provider>
	</authentication-manager>

</beans:beans>